--- drivers/net/r8169.c.orig	2012-10-12 21:37:00.000000000 +0100
+++ drivers/net/r8169.c	2012-10-19 18:30:12.725009004 +0100
@@ -2935,6 +2935,35 @@
 	spin_unlock_irq(&tp->lock);
 }
 
+static bool rtl_rar_check(struct rtl8169_private *tp, u8 *addr)
+{
+	void __iomem *ioaddr = tp->mmio_addr;
+	u32 high;
+	u32 low;
+
+	low  = addr[0] | (addr[1] << 8) | (addr[2] << 16) | (addr[3] << 24);
+	high = addr[4] | (addr[5] << 8);
+
+	if (RTL_R32(MAC4) != high)
+		return false;
+	if (RTL_R32(MAC0) != low)
+		return false;
+
+	if (tp->mac_version == RTL_GIGA_MAC_VER_34) {
+		if (rtl_eri_read(ioaddr, 0xe0, ERIAR_EXGMAC) != low)
+			return false;
+		if (rtl_eri_read(ioaddr, 0xe4, ERIAR_EXGMAC) != high)
+			return false;
+		if (rtl_eri_read(ioaddr, 0xf0, ERIAR_EXGMAC) != (low << 16))
+			return false;
+		if (rtl_eri_read(ioaddr, 0xf4, ERIAR_EXGMAC) != (high << 16 |
+								 low >> 16))
+			return false;
+	}
+
+	return true;
+}
+
 static int rtl_set_mac_address(struct net_device *dev, void *p)
 {
 	struct rtl8169_private *tp = netdev_priv(dev);
@@ -5514,6 +5543,10 @@
 
 	rtl8169_init_phy(dev, tp);
 
+	/* Restore MAC address if buggy BIOS changed it */
+	if (!rtl_rar_check(tp, dev->dev_addr))
+		rtl_rar_set(tp, dev->dev_addr);
+
 	if (netif_running(dev))
 		__rtl8169_resume(dev);
 
